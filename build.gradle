buildscript {

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.+")
        classpath 'org.ajoberstar:gradle-git:1.4.2'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.ajoberstar.grgit'

group 'com.konantech.spring'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')

    // LOMBOK
    compile("org.projectlombok:lombok:1.+")
    annotationProcessor("org.projectlombok:lombok:1.+")
    compileOnly("org.projectlombok:lombok:1.+")
    testAnnotationProcessor("org.projectlombok:lombok:1.+")
    testCompileOnly("org.projectlombok:lombok:1.+")

    // SWAGGER2
    compile("io.springfox:springfox-swagger2:2.+")
    compile("io.springfox:springfox-swagger-ui:2.+")

    // WEBJARS
    compile("org.webjars:jquery:1.12.4")
    compile("org.webjars:swagger-ui:3.24.0")
    compile("org.webjars.bower:swagger-ui-themes:3.0.0")

    compile('javax.servlet:jstl')
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")

    // COMMON
    compile("org.apache.commons:commons-lang3:3.+")
    compile("org.apache.commons:commons-collections4:4.+")
    compile("commons-collections:commons-collections:3.+")
    compile("commons-io:commons-io:2.+")


    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')

}

// MANIFEST-INFO.MF
import org.ajoberstar.grgit.*
def repo = Grgit.open()
bootWar {
    enabled = true
    manifest {
        attributes("Main-Class": "org.springframework.boot.loader.WarLauncher")
        attributes("Built-By": System.getProperty("user.name"))
        attributes(["Specification-Title"     : project.name,
                    "Specification-Version"   : 1.1,
                    "Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"),
                    "Git-Commit"              : repo.head().getAbbreviatedId(8),
                    "Git-Branch"              : repo.branch.getCurrent().getName()], "common")
    }
}
bootWar.manifest.writeTo("src/main/resources/MANIFEST-INFO.MF")

